# -*- coding: utf-8 -*-
"""Hamming_Code_lab_2_Global_Networks.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/Izlaster/Global_Networks_Code_Hamming/blob/main/Hamming_Code_lab_2_Global_Networks.ipynb

# БПМ-19-3 
#Устинов Арсений Михайлович 
# Вариант 71
"""

from typing import List
from math import log2, ceil
from random import randrange
import binascii

def crc32(data):
    """
    Вычисляет контрольную сумму CRC-32 для заданного сообщения.
    """
    data = data.encode('utf-8')
    crc = 0xFFFFFFFF
    poly = 0xEDB88320

    for byte in data:
        crc ^= byte
        for _ in range(8):
            if crc & 1:
                crc = (crc >> 1) ^ poly
            else:
                crc >>= 1

    return crc ^ 0xFFFFFFFF

    source = '''Хотя немецкие надводные рейдеры действовали в западной части Индийского океана в 1939 году и в начале 1940 года, они не заходили в воды Австралии до второй половины 1940 года.\nПервыми кораблями стран Оси в водах Австралиибыли\n\n невооруженные итальянские океанские лайнеры Remo и Romolo, которые находились в водах Австралии, когда фашистская Италия вступила в войну 11 июня 1940 года по восточно-австралийскому времени.\n\nВ то время как Remo был пришвартован во Фримантле и был легко захвачен, Romolo оказалось труднее поймать, так как он покинул Брисбен 5 июня, направляясь в Италию.\nПосле поисков с воздуха и моря, Romolo был перехвачен HMAS Manoora около Науру 12 июня и затоплен её капитаном, чтобы избежать захвата.[13] Немецкий надводный рейдер Orion был первым военным кораблем стран Оси, действовавшим в водах Австралии во время Второй мировой войны. После операций у северной оконечности Новой Зеландии и южной части Тихого океана. Orion вошёл в австралийские воды в Коралловом море в августе 1940 года и 11 августа закрылся в пределах 120 морских миль (220 км) к северо-востоку от Брисбена.[14] После этого Orion взял курс на восток и действовал у берегов Новой Каледонии, а затем направился на юг в Тасманово море, потопив торговое судно Notou к юго-западу от Нумеа 16 августа и британское торговое судно Turakina в Тасманово море четыре дня спустя. После потопления Turakina Orion направился на юго-запад, прошел южнее Тасмании, и безуспешно действовал в Большом Австралийском заливе в начале сентября. После того как Orion 2 сентября заложил четыре муляжа мины у побережья Албани, Западная Австралия, ему пришлось уйти на юго-запад так как на следующий день он был замечен австралийским самолётом. После неудачного патрулирования в Южном океане Orion отплыл на Маршалловы острова для дозаправки и прибыл туда 10 октября.[15] Pinguin был следующим рейдером, который вошел в австралийские воды. Pinguin вошел в Индийский океан из Южной Атлантики в августе 1940 года и прибыл к побережью Западной Австралии в октябре. 7 октября Pinguin захватил у Норт-Уэст-Кейп норвежский танкер Storstad[16] \n\nводоизмещением 9 142 т и вместе с захваченным судном двинулся на восток. Pinguin заложил мины между Сиднеем и Ньюкаслом 28 октября, а Storstad заложил мины у побережья Виктории в ночи с 29 на 31 октября. Pinguin также заложил новые мины у Аделаиды в начале ноября. Затем оба корабля направились на запад, в Индийский океан. \nPinguin и Storstad удалось избежать обнаружения.\n'''
    crc = crc16(source)
    print("CRC-32 для сообщения:\n{}\n: {}".format(source, hex(crc))) # Выводим результат

def __hamming_common(src: List[List[int]], s_num: int, encode=True) -> int:
    s_range = range(s_num)
    errors = 0
    for i in src:
        sindrome = 0
        for s in s_range:
            sind = 0
            for p in range(2 ** s, len(i) + 1, 2 ** (s + 1)):
                for j in range(2 ** s):
                    if (p + j) > len(i):
                        break
                    sind ^= i[p + j - 1]
            if encode:
                i[2 ** s - 1] = sind
            else:
                sindrome += (2 ** s * sind)
        if (not encode) and sindrome:
            try:
                i[sindrome - 1] = int(not i[sindrome - 1])
            except IndexError:
                errors += 1
    return errors

def hamming_encode(msg: str, mode: int = 8) -> str:
    """
    Encoding the message with Hamming code.
    :param msg: Message string to encode
    :param mode: number of significant bits
    :return: 
    """

    result = ""

    msg_b = msg.encode("utf8")
    s_num = ceil(log2(log2(mode + 1) + mode + 1))   # number of control bits
    bit_seq = []
    for byte in msg_b:  # get bytes to binary values; every bits store to sublist
        bit_seq += list(map(int, f"{byte:08b}"))

    res_len = ceil((len(msg_b) * 8) / mode)     # length of result (bytes)
    bit_seq += [0] * (res_len * mode - len(bit_seq))    # filling zeros

    to_hamming = []

    for i in range(res_len):    # insert control bits into specified positions
        code = bit_seq[i * mode:i * mode + mode]
        for j in range(s_num):
            code.insert(2 ** j - 1, 0)
        to_hamming.append(code)

    errors = __hamming_common(to_hamming, s_num, True)   # process

    for i in to_hamming:
        result += "".join(map(str, i))

    return result

def hamming_decode(msg: str, mode: int = 8):
    """
    Decoding the message with Hamming code.
    :param msg: Message string to decode
    :param mode: number of significant bits
    :return: 
    """

    result = ""

    s_num = ceil(log2(log2(mode + 1) + mode + 1))   # number of control bits
    res_len = len(msg) // (mode + s_num)    # length of result (bytes)
    code_len = mode + s_num     # length of one code sequence

    to_hamming = []

    for i in range(res_len):    # convert binary-like string to int-list
        code = list(map(int, msg[i * code_len:i * code_len + code_len]))
        to_hamming.append(code)

    errors = __hamming_common(to_hamming, s_num, False)  # process

    for i in to_hamming:    # delete control bits
        for j in range(s_num):
            i.pop(2 ** j - 1 - j)
        result += "".join(map(str, i))

    msg_l = []

    for i in range(len(result) // 8):   # convert from binary-sring value to integer
        val = "".join(result[i * 8:i * 8 + 8])
        msg_l.append(int(val, 2))

    # finally decode to a regular string
    try:
        result = bytes(msg_l).decode("utf-8")
    except UnicodeDecodeError:
        pass

    return result, errors

def noizer(msg: str, mode: int) -> str:
    """
    Generates an error in each element of a Hamming encoded message
    """
    seq = list(map(int, msg))
    s_num = ceil(log2(log2(mode + 1) + mode + 1))  # количество служебных битов
    code_len = mode + s_num  # длина кодового слова
    cnt = len(msg) // code_len
    result = ""

    for i in range(cnt):
        to_noize = seq[i * code_len:i * code_len + code_len]
        noize = randrange(code_len)
        to_noize[noize] = int(not to_noize[noize])
        result += "".join(map(str, to_noize))

    return result

def noizer4(msg: str, mode: int) -> str:
    """
    Generates up to 4 errors in each element of a Hamming encoded message
    """
    seq = list(map(int, msg))
    s_num = ceil(log2(log2(mode + 1) + mode + 1))  # количество служебных битов
    code_len = mode + s_num  # длина кодового слова
    cnt = len(msg) // code_len
    result = ""

    for i in range(cnt):
        to_noize = seq[i * code_len:i * code_len + code_len]
        noize1 = randrange(code_len)
        noize2 = randrange(code_len)
        noize3 = randrange(code_len)
        noize4 = randrange(code_len)
        to_noize[noize1] = int(not to_noize[noize1])
        to_noize[noize2] = int(not to_noize[noize2])
        to_noize[noize3] = int(not to_noize[noize3])
        to_noize[noize4] = int(not to_noize[noize4])
        result += "".join(map(str, to_noize))

    return result

MODE = 96  # 103 - длина слова => значащих битов в слове 96
msg = "Хотя немецкие надводные рейдеры действовали в западной части Индийского океана в 1939 году и в начале 1940 года, они не заходили в воды Австралии до второй половины 1940 года.\nПервыми кораблями стран Оси в водах Австралиибыли\n\n невооруженные итальянские океанские лайнеры Remo и Romolo, которые находились в водах Австралии, когда фашистская Италия вступила в войну 11 июня 1940 года по восточно-австралийскому времени.\n\nВ то время как Remo был пришвартован во Фримантле и был легко захвачен, Romolo оказалось труднее поймать, так как он покинул Брисбен 5 июня, направляясь в Италию.\nПосле поисков с воздуха и моря, Romolo был перехвачен HMAS Manoora около Науру 12 июня и затоплен её капитаном, чтобы избежать захвата.[13] Немецкий надводный рейдер Orion был первым военным кораблем стран Оси, действовавшим в водах Австралии во время Второй мировой войны. После операций у северной оконечности Новой Зеландии и южной части Тихого океана. Orion вошёл в австралийские воды в Коралловом море в августе 1940 года и 11 августа закрылся в пределах 120 морских миль (220 км) к северо-востоку от Брисбена.[14] После этого Orion взял курс на восток и действовал у берегов Новой Каледонии, а затем направился на юг в Тасманово море, потопив торговое судно Notou к юго-западу от Нумеа 16 августа и британское торговое судно Turakina в Тасманово море четыре дня спустя. После потопления Turakina Orion направился на юго-запад, прошел южнее Тасмании, и безуспешно действовал в Большом Австралийском заливе в начале сентября. После того как Orion 2 сентября заложил четыре муляжа мины у побережья Албани, Западная Австралия, ему пришлось уйти на юго-запад так как на следующий день он был замечен австралийским самолётом. После неудачного патрулирования в Южном океане Orion отплыл на Маршалловы острова для дозаправки и прибыл туда 10 октября.[15] Pinguin был следующим рейдером, который вошел в австралийские воды. Pinguin вошел в Индийский океан из Южной Атлантики в августе 1940 года и прибыл к побережью Западной Австралии в октябре. 7 октября Pinguin захватил у Норт-Уэст-Кейп норвежский танкер Storstad[16] \n\nводоизмещением 9 142 т и вместе с захваченным судном двинулся на восток. Pinguin заложил мины между Сиднеем и Ньюкаслом 28 октября, а Storstad заложил мины у побережья Виктории в ночи с 29 на 31 октября. Pinguin также заложил новые мины у Аделаиды в начале ноября. Затем оба корабля направились на запад, в Индийский океан. \nPinguin и Storstad удалось избежать обнаружения.\n"
print(f'Сообщение:\n{msg}')
checksum = crc32(msg)
print(f'Контрольная сумма: {checksum}')

# Первая отправка (без ошибок)
print('-----------ПЕРВАЯ ОТПРАВКА-----------')
enc_msg = hamming_encode(msg, MODE)
print(f'Кодированное сообщение:\n{enc_msg}')
dec_msg, err = hamming_decode(enc_msg, MODE)
dec_msg = dec_msg[:-2:]
print(f'Раскодированное сообщение:\n{dec_msg}')
print(
    f'Контрольная сумма: {crc32(dec_msg)}, корректность: {crc32(dec_msg) == checksum}')
print(f'MSG: {msg == dec_msg}')

# Вторая отправка (не более 1 ошибки на слово)
print('-----------ВТОРАЯ ОТПРАВКА-----------')
noize_msg = noizer(enc_msg, MODE)
print(f'Кодированное сообщение с ошибками:\n{noize_msg}')
dec_msg, err = hamming_decode(noize_msg, MODE)
dec_msg = dec_msg[:-2:]
print(f'Раскодированное сообщение:\n{dec_msg}')
print(
    f'Контрольная сумма: {crc32(dec_msg)}, корректность: {crc32(dec_msg) == checksum}')
print(f'MSG: {msg == dec_msg}')

# Третья отправка (4 ошибки на слово)
print('-----------ТРЕТЬЯ ОТПРАВКА-----------')
noize_msg = noizer4(enc_msg, MODE)
print(f'Кодированное сообщение с ошибками:\n{noize_msg}')
dec_msg, err = hamming_decode(noize_msg, MODE)
dec_msg = dec_msg[:-2:]
print(f'Раскодированное сообщение:\n{dec_msg}')
print(
    f'Контрольная сумма: {crc32(dec_msg)}, корректность: {crc32(dec_msg) == checksum}, количество обнаруженных ошибок: {err}')



